{"name": "Попытка создания заказа без токена", "status": "skipped", "statusDetails": {"message": "XFAIL reason: Ожидался 401, получен 200\n\n_pytest.outcomes.XFailed: Ожидался 401, получен 200", "trace": "self = <tests.test_orders.TestOrderCreation object at 0x00000204C9506780>, api_client = <helpers.api_client.StellarBurgersApi object at 0x00000204C94C74D0>\nget_valid_ingredients = {'bun': '61c0c5a71d1f82001bdaaa6d', 'main': '61c0c5a71d1f82001bdaaa6f', 'sauce': '61c0c5a71d1f82001bdaaa72'}\n\n    @allure.story(\"Неавторизованный пользователь\")\n    @allure.title(\"Попытка создания заказа без токена\")\n    def test_unauthorized_access(self, api_client, get_valid_ingredients):\n        \"\"\"Проверка, что неавторизованные пользователи не могут создавать заказы\"\"\"\n        with allure.step(\"Отправка запроса без токена\"):\n            response = api_client.create_order(\n                ingredients=[get_valid_ingredients[\"bun\"]]\n            )\n    \n        with allure.step(\"Проверка статуса ответа\"):\n            if response.status_code != HTTP_STATUS[\"UNAUTHORIZED\"]:\n                allure.dynamic.tag(\"expected_failure\")\n                allure.dynamic.description(f\"\"\"\n                ### Ожидаемое поведение:\n                API должно возвращать 401 для неавторизованных запросов\n                ### Фактический результат:\n                Получен статус {response.status_code}\n                \"\"\")\n>               pytest.xfail(f\"Ожидался 401, получен {response.status_code}\")\nE               _pytest.outcomes.XFailed: Ожидался 401, получен 200\n\ntests\\test_orders.py:87: XFailed"}, "description": "\n                ### Ожидаемое поведение:\n                API должно возвращать 401 для неавторизованных запросов\n                ### Фактический результат:\n                Получен статус 200\n                ", "steps": [{"name": "Отправка запроса без токена", "status": "passed", "start": 1747945805358, "stop": 1747945805530}, {"name": "Проверка статуса ответа", "status": "failed", "statusDetails": {"message": "_pytest.outcomes.XFailed: Ожидался 401, получен 200\n", "trace": "  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_2\\tests\\test_orders.py\", line 87, in test_unauthorized_access\n    pytest.xfail(f\"Ожидался 401, получен {response.status_code}\")\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_2\\venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 256, in xfail\n    raise XFailed(reason)\n"}, "start": 1747945805530, "stop": 1747945805530}], "attachments": [{"name": "log", "source": "67c3f0fa-3c82-4c91-874a-15a5151323c2-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "312a2a52-57c7-4a32-b3a8-8220acc28786-attachment.txt", "type": "text/plain"}], "start": 1747945805357, "stop": 1747945805534, "uuid": "4ea20d92-cc0f-493a-a38a-ae8b2f78c76d", "historyId": "e137d2ff4d22eb19efbada3d8344e664", "testCaseId": "e137d2ff4d22eb19efbada3d8344e664", "fullName": "tests.test_orders.TestOrderCreation#test_unauthorized_access", "labels": [{"name": "tag", "value": "expected_failure"}, {"name": "epic", "value": "Stellar Burgers API"}, {"name": "story", "value": "Неавторизованный пользователь"}, {"name": "feature", "value": "Создание заказа"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders"}, {"name": "subSuite", "value": "TestOrderCreation"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "15736-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders"}]}