{"name": "Попытка задания email без @", "status": "skipped", "statusDetails": {"message": "XFAIL API принимает невалидный email (без символа @). Ожидается ошибка валидации (400),         но получаем 200.\n\nAssertionError: Ожидался статус 400, но получен 200. Тело ответа: {\"success\":true,\"user\":{\"email\":\"invalid-email-f69d678c-0f1b-46cc-b8b9-22e4be5965f1@test\",\"name\":\"User_a0a425a5\"}}\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code", "trace": "self = <tests.test_user_profile.TestUserProfile object at 0x0000028571A49350>, api_client = <helpers.api_client.StellarBurgersApi object at 0x0000028571BB5250>\nregistered_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDg1MWRkOWVkMjgwMDAxYjYxNjdjZSIsImlhdCI6MTc0...PklQDEjGB6yKWqOiTVY', 'email': 'user_13fb6cfd@test.com', 'name': 'User_a0a425a5', 'password': 'Password_5745e8d5', ...}\n\n    @allure.story(\"Ошибки валидации\")\n    @allure.title(\"Попытка задания email без @\")\n    @pytest.mark.xfail(\n        reason=\"API принимает невалидный email (без символа @). Ожидается ошибка валидации (400), \\\n        но получаем 200.\")\n    def test_invalid_email_no_at(self, api_client, registered_user):\n        invalid_email = f\"invalid-email-{uuid.uuid4()}@test\"\n        response = api_client.update_user_info(\n            registered_user[\"access_token\"],\n            invalid_email,\n            registered_user[\"name\"]\n        )\n>       assert response.status_code == HTTP_STATUS[\"BAD_REQUEST\"], (\n            f\"Ожидался статус 400, но получен {response.status_code}. \"\n            f\"Тело ответа: {response.text}\"\n        )\nE       AssertionError: Ожидался статус 400, но получен 200. Тело ответа: {\"success\":true,\"user\":{\"email\":\"invalid-email-f69d678c-0f1b-46cc-b8b9-22e4be5965f1@test\",\"name\":\"User_a0a425a5\"}}\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests\\test_user_profile.py:103: AssertionError"}, "attachments": [{"name": "log", "source": "eab32bc4-105f-45ac-b26d-fa231267b43a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e8d7f526-00ef-406e-b190-34066437bcd9-attachment.txt", "type": "text/plain"}], "start": 1749570020105, "stop": 1749570020420, "uuid": "4c8321fc-d2ab-43d3-beca-ad398f8b6aa4", "historyId": "83085b3c54241accc61f9fd746fa95d8", "testCaseId": "83085b3c54241accc61f9fd746fa95d8", "fullName": "tests.test_user_profile.TestUserProfile#test_invalid_email_no_at", "labels": [{"name": "story", "value": "Ошибки валидации"}, {"name": "epic", "value": "Stellar Burgers API"}, {"name": "feature", "value": "Изменение данных пользователя"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='API принимает невалидный email (без символа @). Ожидается ошибка валидации (400),         но получаем 200.')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_profile"}, {"name": "subSuite", "value": "TestUserProfile"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "17636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_profile"}]}